@page "/"
@using System.IO;
@using System.Net.Http.Json;
@using Newtonsoft.Json;
@inject IJSRuntime JSRuntime;
@inject HttpClient Http;


<style>
    tr:hover {
        background-color: #a6adad !important;
    }
</style>



<div class="container-fluid;background-color:whiteSmoke;">

    <label style="float:left;"> Record Id: @id</label>

    @if (sampleData == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table id="datatable" class="table" style="font-size:13px;">
            <thead>
                <tr>
                    <th style="display:none;"> RecordID </th>
                    <th> OrderID </th>
                    <th> Country </th>
                    <th style="display:none;"> ShipCountry </th>
                    <th> ShipCity </th>
                    <th> ShipName </th>
                    <th> ShipAddress </th>
                    <th> CompanyEmail </th>
                    <th> CompanyAgent </th>
                    <th> CompanyName </th>
                    <th style="display:none;"> Currency </th>
                    <th style="display:none;"> Notes</th>
                    <th> Department </th>
                    <th> Website </th>
                    <th style="display:none;"> Latitude </th>
                    <th style="display:none;"> Longitude </th>
                    <th> ShipDate </th>
                    <th> PaymentDate </th>
                    <th style="display:none;"> TimeZone </th>
                    <th> TotalPayment </th>
                    <th style="display:none;"> Gender </th>
                    <th style="display:none;"> Status </th>
                    <th style="display:none;"> Type </th>
                    <th> Actions </th>
                </tr>
            </thead>
            <tbody>
                @{ var color = string.Empty;
                    var n = 1;}
                @foreach (var x in sampleData)
                {
                    if (n % 2 == 0)
                        color = "#b6fada";
                    else
                        color = "#89d8f1";
                    <tr style="background-color:@color;">
                        <td style="display:none;"> @x.RecordID </td>
                        <td style="font-size:10px;"> @x.OrderID </td>
                        <td> @x.Country </td>
                        <td style="display:none;"> @x.ShipCountry </td>
                        <td> @x.ShipCity </td>
                        <td> @x.ShipName </td>
                        <td> @x.ShipAddress </td>
                        <td> @x.CompanyEmail </td>
                        <td> @x.CompanyAgent </td>
                        <td> @x.CompanyName </td>
                        <td style="display:none;"> @x.Currency </td>
                        <td style="display:none;"> @x.Notes</td>
                        <td> @x.Department </td>
                        <td> @x.Website </td>
                        <td style="display:none;"> @x.Latitude </td>
                        <td style="display:none;"> @x.Longitude </td>
                        <td> @x.ShipDate </td>
                        <td> @x.PaymentDate.ToString().Substring(0, 10)</td>
                        <td style="display:none;"> @x.TimeZone </td>
                        <td> @x.TotalPayment </td>
                        <td style="display:none;"> @x.Gender </td>
                        <td style="display:none;"> @x.Status </td>
                        <td style="display:none;"> @x.Type </td>
                        <td>  <button class="btn btn-info" @onclick="@((ui) => RecordId(Convert.ToInt32(@x.RecordID)))"> Id </button></td>
                    </tr>
                    n++;
                }
            </tbody>
        </table>
    }

    <label>@exception</label>

</div>

@code {

    private SampleData[]  sampleData ;
    private string lines = string.Empty;
    private int id = 0;
    string exception = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            sampleData = await Http.GetFromJsonAsync<SampleData[]>("sample-data/data.json");
            await JSRuntime.InvokeAsync<object>("initializeDataTable", "#datatable");
        }
        catch (Exception ex)
        {
            exception = ex.ToString();
        }
    }

    public void RecordId(int _id)
    {
        id = _id;
    }

    public class SampleData
    {
        public object RecordID { get; set; }
        public object OrderID { get; set; }
        public object Country { get; set; }
        public object ShipCountry { get; set; }
        public object ShipCity { get; set; }
        public object ShipName { get; set; }
        public object ShipAddress { get; set; }
        public object CompanyEmail { get; set; }
        public object CompanyAgent { get; set; }
        public object CompanyName { get; set; }
        public object Currency { get; set; }
        public object Notes { get; set; }
        public object Department { get; set; }
        public object Website { get; set; }
        public object Latitude { get; set; }
        public object Longitude { get; set; }
        public object ShipDate { get; set; }
        public object PaymentDate { get; set; }
        public object TimeZone { get; set; }
        public object TotalPayment { get; set; }
        public object Gender { get; set; }
        public object Status { get; set; }
        public object Type { get; set; }
        public object Actions { get; set; }
    }


}
